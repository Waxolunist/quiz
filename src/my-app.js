define(["require","../node_modules/@polymer/polymer/polymer-element.js","../node_modules/@polymer/polymer/lib/utils/settings.js","../node_modules/@polymer/app-layout/app-header/app-header.js","../node_modules/@polymer/app-layout/app-header-layout/app-header-layout.js","../node_modules/@polymer/app-layout/app-scroll-effects/app-scroll-effects.js","../node_modules/@polymer/app-layout/app-toolbar/app-toolbar.js","../node_modules/@polymer/app-route/app-location.js","../node_modules/@polymer/app-route/app-route.js","../node_modules/@polymer/iron-pages/iron-pages.js","../node_modules/@polymer/iron-icon/iron-icon.js","../node_modules/@polymer/paper-styles/color.js","./my-icons.js"],function(_require,_polymerElement,_settings,_appHeader,_appHeaderLayout,_appScrollEffects,_appToolbar,_appLocation,_appRoute,_ironPages,_ironIcon,_color,_myIcons){"use strict";_require=babelHelpers.interopRequireWildcard(_require);function _templateObject_f78982d0972111e99e121559d6999ace(){var data=babelHelpers.taggedTemplateLiteral(["\n      <style>\n        :host {\n          --app-primary-color: var(--google-blue-500);\n          --app-secondary-color: black;\n\n          display: block;\n          position: absolute;\n          top: 0; bottom: 0; left: 0; right: 0;\n          overflow-x: hidden;\n        }\n\n        .base {\n          min-width: 350px;\n        }\n\n        app-header {\n          color: #fff;\n          background-color: var(--app-primary-color);\n        }\n\n        app-toolbar {\n          padding-left: 0;\n        }\n\n        iron-pages {\n          overflow: hidden;\n        }\n\n        iron-pages,\n        iron-pages > * {\n          height: 100%;\n        }\n\n        .qrscanner-link {\n          margin: auto;\n          width: 64px;\n          height: 64px;\n        }\n\n        .qrscanner-link > iron-icon {\n          width: 96px;\n          height: 96px;\n        }\n\n        .appicon {\n          height: 64px;\n          padding-right: 16px;\n        }\n      </style>\n\n      <app-location route=\"{{route}}\" url-space-regex=\"^/\" use-hash-as-path=\"true\">\n      </app-location>\n\n      <app-route route=\"{{route}}\" pattern=\"/:page\" data=\"{{routeData}}\" tail=\"{{subroute}}\">\n      </app-route>\n      <app-route route=\"{{subroute}}\" pattern=\"/:id\" data=\"{{subrouteData}}\">\n      </app-route>\n \n\n        <!-- Main content -->\n        <app-header-layout has-scrolling-region=\"\" fullbleed=\"\" class=\"base\">\n\n          <app-header slot=\"header\" fixed=\"\" condenses=\"\"  effects=\"waterfall\">\n            <app-toolbar>\n              <img class=\"appicon\" src=\"[[rootPath]]images/Answer_to_Life_42.svg\"/>\n              <div main-title=\"\">Geburtstagsr\xE4tsel</div>\n              <a href=\"#/\" class=\"qrscanner-link\"><iron-icon icon=\"my-icons:qrscanner\"></iron-icon></a>\n            </app-toolbar>\n          </app-header>\n\n          <iron-pages selected=\"[[page]]\" attr-for-selected=\"name\" role=\"main\" selected-attribute=\"active\">\n            <scanner-view name=\"scanner\"></scanner-view>\n            <solution-view name=\"solution\" question-id=\"[[subrouteData.id]]\"></solution-view>\n            <question-view name=\"question\" question-id=\"[[subrouteData.id]]\"></question-view>\n            <nexthint-view name=\"nexthint\" question-id=\"[[subrouteData.id]]\"></nexthint-view>\n            <my-view404 name=\"view404\"></my-view404>\n          </iron-pages>\n        </app-header-layout>\n    "]);_templateObject_f78982d0972111e99e121559d6999ace=function _templateObject_f78982d0972111e99e121559d6999ace(){return data};return data}// Gesture events like tap and track generated from touch will not be
// preventable, allowing for better scrolling performance.
(0,_settings.setPassiveTouchGestures)(!0);// Set Polymer's root path to the same value we passed to our service worker
// in `index.html`.
(0,_settings.setRootPath)(MyAppGlobals.rootPath);var MyApp=/*#__PURE__*/function(_PolymerElement){babelHelpers.inherits(MyApp,_PolymerElement);function MyApp(){babelHelpers.classCallCheck(this,MyApp);return babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(MyApp).apply(this,arguments))}babelHelpers.createClass(MyApp,[{key:"ready",value:function ready(){babelHelpers.get(babelHelpers.getPrototypeOf(MyApp.prototype),"ready",this).call(this);new URL(document.querySelector("base").href).pathname;fetch("./assets/questions.json").then(function(response){return response.json()}).then(function(response){response.questions.forEach(function(q){localStorage.setItem(q.id,JSON.stringify(q))})});fetch("./assets/questions-html.json").then(function(response){return response.json()}).then(function(response){Object.entries(response).forEach(function(array){localStorage.setItem("template-"+array[0],array[1])})})}},{key:"connectedCallback",value:function connectedCallback(){babelHelpers.get(babelHelpers.getPrototypeOf(MyApp.prototype),"connectedCallback",this).call(this);this.addEventListener("viewchange",this._routeChange)}},{key:"disconnectedCallback",value:function disconnectedCallback(){babelHelpers.get(babelHelpers.getPrototypeOf(MyApp.prototype),"disconnectedCallback",this).call(this);window.removeEventListener("viewchange",this._routeChange)}},{key:"_routeChange",value:function _routeChange(e){//this.set('route.path', this.rootPath + e.detail.path);
this.set("route.path","/"+e.detail.path)}},{key:"_routePageChanged",value:function _routePageChanged(page){// Show the corresponding page according to the route.
//
// If no page was found in the route data, page will be an empty string.
// Show 'view1' in that case. And if the page doesn't exist, show 'view404'.
if(!page){this.page="scanner"}else if(-1!==["scanner","question","solution","nexthint"].indexOf(page)){this.page=page}else{this.page="view404"}}},{key:"_pageChanged",value:function _pageChanged(page){// Import the page component on demand.
//
// Note: `polymer build` doesn't like string concatenation in the import
// statement, so break it up.
switch(page){case"scanner":new Promise(function(res,rej){return _require.default(["./scanner.js"],res,rej)});break;case"solution":new Promise(function(res,rej){return _require.default(["./solution.js"],res,rej)});break;case"question":new Promise(function(res,rej){return _require.default(["./question.js"],res,rej)});break;case"nexthint":new Promise(function(res,rej){return _require.default(["./nexthint.js"],res,rej)});break;case"view404":new Promise(function(res,rej){return _require.default(["./my-view404.js"],res,rej)});break;}}}],[{key:"template",get:function get(){return(0,_polymerElement.html)(_templateObject_f78982d0972111e99e121559d6999ace())}},{key:"properties",get:function get(){return{page:{type:String,reflectToAttribute:!0,observer:"_pageChanged"},routeData:Object,subroute:Object}}},{key:"observers",get:function get(){return["_routePageChanged(routeData.page)"]}}]);return MyApp}(_polymerElement.PolymerElement);window.customElements.define("my-app",MyApp)});